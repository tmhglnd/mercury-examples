{
  "00_sample-and-time": "// play different samples\n// at different time intervals\nset tempo 95\n\nnew sample piano_a time(1)\nnew sample piano_c time(1/2)\nnew sample piano_f time(1/3)\nnew sample piano_g time(1/4)\n\n// add reverb fx to all samples\nset all fx(reverb 0.4 3)",
  "01_offset-in-time": "// multiple samples make up a beat\n// using a time offset as \n// second argument\nset tempo 131\n\nnew sample kick_909 time(1/4)\nnew sample snare_909 time(1/2 1/4)\nnew sample hat_909 time(1/4 1/8)\nnew sample hat_909_open time(1 15/16)\nnew sample clap_909 time(5/16)\n\n// short slapback reverb\nset all fx(reverb 0.5 2)",
  "02_linear-beat": "// choose 15 random samples from a list of\n// predefined samplename. Play those samples \n// sequentially for every time interval\nset tempo 112\n\n// randomseed makes sure every run the \n// random values are the same\nset randomSeed 1234\n\nlist samples [tabla_lo tabla_hi tabla_mid tabla_hi_short]\nlist selection choose(15 samples)\n\nnew sample selection time(1/16)\nnew sample kick_house time(1/4)\n\nset all fx(reverb 0.3 3)",
  "03_sample-scrubbing": "// make 2 different position lists of 16 values \n// from a randomFloat() method and combine them\n// into one list. Fade-in the sample in 1 ms, \n// Play it for 50 ms and fade-out 2 in ms with shape()\nset tempo 131\n\n// randomseed makes sure every run the \n// random values are the same\n// try some different values to hear the result\nset randomSeed 3141\n\nlist pos1 randomFloat(16 0 0.2)\nlist pos2 randomFloat(16 0.2 0.3)\nlist offset join(pos1 pos1 pos1 pos2)\n\nnew sample harp_up time(1/16) shape(1 80) start(offset) gain(2)\n\nset all fx(reverb 0.5 11)",
  "04_possibility-rhythm": "// make a rhythm with ones and zeroes\n// in a list. A value between one and zero is\n// a probability (for example 0.5 = 50% chance)\nset tempo 83\n\nnew sample kick_909 time(1/4)\n\n// try changing the values in the list\n// try adding/removing values as well\nlist rhythm [1 0 0 1 0.1 0.5 0.2]\nnew sample bamboo_g time(1/16) beat(rhythm)\n\nset all fx(reverb 0.4 3)",
  "05_synth-and-note": "// play a melody from a list of semitones\n// use different octaves with the second\n// argument in the note() method\nset tempo 98\n\n// star wars melody as relative intervals\nlist jedi [-5 0 2 3 5 3 -5 -5 0 2 3 -5 3 0 7 5]\n\nnew synth sine name(luke)\n    set luke note(jedi 2) shape(5 300) time(1/6)\n\nnew synth sine name(leia)\n    set leia note(jedi 3) shape(5 90) time(1/8)\n\n// apply a reverb, distortion and distortion to all synths\nset all fx(reverb 0.3 9) fx(drive 5) fx(delay 1/12 2/12 0.8)",
  "06_generative-melody": "// generate a small theme from a sine function \n// and transform it with various methods like\n// invert(), join() and clone()\nset tempo 98\n// set a scale to map all the notes to\nset scale minor_pentatonic b\n\nlist theme sine(16 5 0 24)\nlist variation invert(theme 0 24)\nlist phrase join(theme variation)\nlist section clone(phrase 0 5 9 7)\n\nnew synth triangle name(arpy)\n    set arpy time(1/16) shape(1 170) note(section 0)\n    \n    // give the synth random panning, a filter and a delay\n    set arpy pan(random) fx(filter low 2300 0.4) fx(delay 4/16 5/16 0.8)",
  "07_granular-playback": "// simple granular timestretching is achieved\n// by quickly playing short grains of a sample\n// and changing the offset of the playback\nset tempo 120\n\n// a position ramp up-down over 2000 values\nlist pos sineFloat(1100 1 0 0.5)\n\n// small detuning for every sample playback\nlist detune randomFloat(1000 0.95 1.05)\n\nnew sample bowl_mid name(grain)\n    set grain time(1/32) shape(4 1/40 4) \n    set grain offset(pos) pan(random)\n    set grain fx(delay 3/16 5/16 0.7)\n    set grain speed(detune)",
  "08_modulating-fx": "// combine multiple effects modulated in time by lists\n// to create interesting synthesized sounds\nset tempo 132\nset scale minor c\n\nnew synth saw note([0 1 [12 24 19 36]] 0) name(syn)\n    // modulate the length of the note with a cosine function\n    set syn shape(1 cosine(128 3.14 50 300)) time(1/16) \n    // randomnes to the slide between notes and the overdrive fx\n    set syn slide([[100 0] 0 0]) fx(drive random(4 2 15)) \n    // slowly rise the filter cutoff frequency\n    set syn fx(filter low spread(32 200 3500) 0.6)\n    // change delaytimes every 16 notes\n    set syn fx(delay repeat([1/32 3/16] 16) 1/8 0.8)",
  "09_lofi-hiphop": "// A lo-fi beat with amenbreak chops and a pitchshifted \n// rhodes sample on the offbeat\nset tempo 87\nset scale minor c\nset randomSeed 3210\n\n// chopped amen break\nnew loop amen time(1/16) start(choose(16 spreadFloat(16)))\n\n// hihats and a kick-hat-snare-hat beat\nnew sample hat_808 time(1/16) pan(random) gain(0.5)\nnew sample [kick_dub hat_808_open snare_rock hat_808_open] time(1/4)\n\nnew sample rhodes_8bit name(rhodes)\n    set rhodes time(1/4 1/8) fx(shift repeat([0 3 7 2] 8))\n    set rhodes shape(1 1/8 1) fx(reverb 0.3 7)",
  "10_techno-acid": "// techno/acid beat with random closed/open hihat\n// kick has some delay and distortion\n// saw synthesizer with random cutoff frequency on the filter\nset tempo 131\n\nnew sample kick_909 time(1/4) name(kick)\n    set kick speed(0.9) fx(drive 5) gain(0.9) \n    set kick fx(delay 7/16 6/16 0.7)\n\nnew sample [[hat_808 hat_808_open]] time(1/4 1/8)\n\nnew synth saw time(1/16) shape(1 1/32 1) name(bass)\n    set bass fx(filter low random(16 50 3000))\n    set bass fx(reverb 0.5 5) super(0.01532 3)",
  "11_808-beat": "// 808 beats\n// change the tempo\nset tempo 115\n// try different numbers to create new random patterns\nset randomSeed 9832\n\n// various sounds in a list\nlist manySounds [kick_808 hat_808 hat_808_semi maracas_808 snare_808 tom_808]\n// choose 16 names randomly from the list\nlist pattern choose(16 manySounds)\n\n// play the sounds with a squash effect and random panning \n// on left/right speaker\nnew sample pattern time(1/16) fx(squash 5) pan(random)",
  "12_drone-synths": "// A synth that functions as bass drone \n// Combined with a short high pitch synth with delay\n// Creating in a melody from a lookup scale list\nset tempo 124\n// set a scale\nset scale harmonic_minor c\n\n// some note numbers for bass synth\nlist notes [3 7 5 8]\nnew synth saw note(notes 0) time(4) name(drone)\n    set drone fat(0.1132 3) shape(off) fx(squash 5)\n    set drone fx(reverb 0.6 5) fx(filter low 1500 0.4)\n\n// create a melody for the lead synth\nlist melody cosine(16 5.32 0 12)\nnew synth sine note(melody 2) time(1/2) name(lead)\n    set lead shape(1 120) fat(0.021 3) fx(distort 10)\n    set lead fx(delay 3/16 4/16 0.8) fx(reverb 0.5 3)",
  "13_beethovens-fifth": "// The first two measures of Beethovens 5th Symphony\n// Using 3 synths with squarewave oscillators in 3 different octaves\n// The notes are repeated in a list together with notelengths\n// The timediv is used to divide quarter notes into 16th\n\n// The key is C minor\nset scale minor c\nset tempo 70\n\n// The notes are g, eb, f, d\nlist notes repeat([7 3 5 2] [3 1 3 1])\nlist lengths repeat([1/16 1/1] [3 1 3 1])\nprint notes lengths\n\n// Three synths in different octaves playing the same notes\nnew synth square note(notes 1) \nnew synth square note(notes)\nnew synth square note(notes -1)\n\n// These settings are set for all the synths above\nset all time(1/4) timediv([4 1 1 1]) play([1 1 1 1 0 0 0]) \nset all shape(1 lengths) super(0.1 3) fx(reverb 0.4 5) ",
  "14_great-fairys-fountain": "// The Legend of Zelda - Ocarina of Time - The Great Fairy's Fountain\n// The first 4 measures of this melody, generated using algorithmic process\n// lacing the lead notes with the repetitive arpegiator and joining the 4 bars\n\nset tempo 80\n// we'll set the scale to none in order for the exact notenames to work correctly\nset scale none\n\nlist m1 flat(lace([a5 g5 f#5 g5] duplicate([[d5 bb4 g4]] 4)))\nlist m2 flat(lace([g5 f5 e5 f5] duplicate([[c5 a4 f4]] 4)))\nlist m3 flat(lace([f5 e5 d#5 e5] duplicate([[bb4 g4 e4]] 4)))\nlist m4 flat(lace([e5 d5 c#5 d5] duplicate([[a4 f4 d4]] 4)))\nlist total join(m1 m2 m3 m4)\n\nnew synth square note(total 0) shape(1 1/8) time(1/16) fx(reverb 0.5 4)\n",
  "15_bladerunner-ish": "// A soundscape inspired by BLADE RUNNER's composer Vangelis\n// Multiple saw oscillators with detuning. A dorian melody \n// generated as a list. Notes slide slowly from one to another\n// The syntsh have various filtering, reverb and compression\n\nset tempo 35\nset scale dorian d\nset randomSeed 4328\n\nlist notes shuffle(spreadInclusive(8 0 12))\nnew synth saw note(notes 0) time(2/1) pan(random) slide(1/2)\nnew synth saw note(notes -1) time(2/1) pan(random) slide(1/2)\nset all fx(filter low [1500 5000] 0.4 1/4)\n\nnew synth saw note(notes 1) time(1/2) timediv([1 1 2]) slide(1/16) fx(filter low [1500 3500] 0.7 1/8)\nset all super(0.132 3) shape(off)\nset all fx(reverb 0.7 10) fx(compress) human(100)\n"
}
